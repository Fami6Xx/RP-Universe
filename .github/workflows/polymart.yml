name: Build and Update Polymart Release

on:
  release:
    types: [published]

jobs:
  build-and-upload:
    # Only run for stable (non-prerelease) releases.
    if: ${{ github.event.release.prerelease == false }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Prepare artifact for upload
        run: |
          mkdir staging
          echo "Copying non-shaded JAR files..."
          for file in target/*.jar; do
            if [[ "$file" != *-shaded* ]]; then
              echo "Copying $file"
              cp "$file" staging
            else
              echo "Skipping $file (shaded file)"
            fi
          done
      - name: Post update to Polymart
        env:
          POLYMART_API_KEY: ${{ secrets.POLYMART_API_KEY }}
          POLYMART_RESOURCE_ID: ${{ secrets.POLYMART_RESOURCE_ID }}
          # Use release metadata from GitHub
          RELEASE_VERSION: ${{ github.event.release.tag_name }}
          RELEASE_TITLE: ${{ github.event.release.name }}
          RELEASE_MESSAGE: ${{ github.event.release.body }}
        run: |
          # Pick the first non-shaded JAR from the staging directory
          FILE=$(ls staging/*.jar | head -n 1)
          echo "Uploading ${FILE} to Polymart as version ${RELEASE_VERSION}..."
          curl -X POST https://api.polymart.org/v1/postUpdate \
            -F "api_key=${POLYMART_API_KEY}" \
            -F "resource_id=${POLYMART_RESOURCE_ID}" \
            -F "version=${RELEASE_VERSION}" \
            -F "title=${RELEASE_TITLE}" \
            -F "message=${RELEASE_MESSAGE}" \
            -F "beta=0" \
            -F "snapshot=0" \
            -F "file=@${FILE}"
